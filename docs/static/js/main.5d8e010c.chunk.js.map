{"version":3,"sources":["components/saborScene.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Canvas","canvas","SceneComponent","document","getElementById","w","window","innerWidth","h","innerHeight","renderer","THREE","setSize","scene","camera","geometry","material","color","cube","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","id","Component","SaborScene","App","className","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"wRAKMA,EAAYC,IAAOC,IAAV,4DAEP,2GAUFC,EAASF,IAAOG,OAAV,oCACJ,oCAMFC,E,uKACF,WACE,IAAID,EAASE,SAASC,eAAe,YACjCC,EAAsB,GAAlBC,OAAOC,WACXC,EAAuB,GAAnBF,OAAOG,YACXC,EAAW,IAAIC,IAAoB,CAACV,OAAQA,IAChDS,EAASE,QAASP,EAAGG,GAErB,IAAIK,EAAQ,IAAIF,IACZG,EAAS,IAAIH,IAAyB,GAAIN,EAAEG,EAAG,GAAK,KACpDO,EAAW,IAAIJ,IAAmB,EAAG,EAAG,GACxCK,EAAW,IAAIL,IAAyB,CAAEM,MAAO,UACjDC,EAAO,IAAIP,IAAYI,EAAUC,GACrCH,EAAMM,IAAKD,GACXJ,EAAOM,SAASC,EAAI,GACN,SAAVC,IACFC,sBAAuBD,GACvBJ,EAAKM,SAASC,GAAK,IACnBP,EAAKM,SAASE,GAAK,IACnBhB,EAASiB,OAAQd,EAAOC,GAE1BQ,K,oBAEF,WACE,OACE,cAACzB,EAAD,UACI,cAACG,EAAD,CAAQ4B,GAAG,mB,GA1BMC,aAgCZ,SAASC,IACtB,OAAO,cAAC,EAAD,ICrDI,SAASC,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACF,EAAD,IACA,sCACO,8CADP,0BAGA,mBACEE,UAAU,WACVC,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,8BCZR,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,EAAD,MAEF3C,SAASC,eAAe,SAM1BgC,M","file":"static/js/main.5d8e010c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from 'styled-components';\r\nimport tw from 'twin.macro';\r\nimport * as THREE from \"three\";\r\n\r\nconst Container = styled.div`\r\n    min-height: 300px;\r\n    ${tw`\r\n        flex\r\n        flex-col\r\n        w-full\r\n        h-full\r\n        items-center\r\n        overflow-x-hidden\r\n    `}\r\n`;\r\n\r\nconst Canvas = styled.canvas`\r\n    ${tw`\r\n        min-w-full\r\n        min-h-full\r\n    `}\r\n`;\r\n\r\nclass SceneComponent extends Component {\r\n    componentDidMount() {\r\n      let canvas = document.getElementById('renderer');\r\n      let w = window.innerWidth*0.8;\r\n      let h = window.innerHeight*0.8;\r\n      var renderer = new THREE.WebGLRenderer({canvas: canvas});\r\n      renderer.setSize( w, h );\r\n      \r\n      var scene = new THREE.Scene();\r\n      var camera = new THREE.PerspectiveCamera( 75, w/h, 0.1, 1000 );\r\n      var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n      var material = new THREE.MeshBasicMaterial( { color: 0x61dafb } );\r\n      var cube = new THREE.Mesh( geometry, material );\r\n      scene.add( cube );\r\n      camera.position.z = 5;\r\n      var animate = function () {\r\n        requestAnimationFrame( animate );\r\n        cube.rotation.x += 0.01;\r\n        cube.rotation.y += 0.01;\r\n        renderer.render( scene, camera );\r\n      };\r\n      animate();\r\n    }\r\n    render() {\r\n      return (\r\n        <Container>\r\n            <Canvas id='renderer'></Canvas>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default function SaborScene() {\r\n    return <SceneComponent />\r\n  }","import React from \"react\";\nimport './App.css';\nimport SaborScene from \"./components/saborScene\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SaborScene />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}